var documenterSearchIndex = {"docs":
[{"location":"Julia2ndLang/ch16_organizing_and_modularizing_your_code/#Organizing-and-modularizing-your-code","page":"Setup Packages","title":"Organizing and modularizing your code","text":"","category":"section"},{"location":"Julia2ndLang/ch1_why_julia/#Why-Julia?","page":"Why Julia?","title":"Why Julia?","text":"","category":"section"},{"location":"Julia2ndLang/ch2_julia_as_a_calculator/#Julia-as-a-calculator","page":"Julia as a Calculator","title":"Julia as a calculator","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = JuliaStudy","category":"page"},{"location":"#JuliaStudy","page":"Home","title":"JuliaStudy","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for JuliaStudy.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [JuliaStudy]","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/#Setup-Julia-Repo-in-GitHub-with-Actions","page":"Setup Environments","title":"Setup Julia Repo in GitHub with Actions","text":"","category":"section"},{"location":"Julia2ndLang/ch0_setup_julia_env/#Install-Julia","page":"Setup Environments","title":"Install Julia","text":"","category":"section"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"Basically if you are using Linux or Mac, you can easily install Julia by the package manager. For Gentoo, we can install it with portage as following.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"$ sudo emerge -av julia\n","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"The problem to install Julia by Gentoo package manager is slow upgrade speed. In this time, July 27 2023, latest stable version version of Julia in the official site is 1.9.2 but Gentoo still has 1.8.5 as the latest one. To overcome this gap, according to the instruction in Julia GitHub we can easily install it by compiling source.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"$ cd localgit  <-- local git directory\n$ git clone https://github.com/JuliaLang/julia.git\n$ cd julia\n$ git checkout v1.9.2  <-- tag for latest version\n$ make\n$ ln -s julia ~/.local/bin/julia  <-- This should be earlier path than /usr/bin/julia","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/#Setup-Julia-language-server-with-formatter-for-Neovim","page":"Setup Environments","title":"Setup Julia language server with formatter for Neovim","text":"","category":"section"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"info: Info\nThis setup is based on cloned Neovim-from-scratch and Github repo: evoagile_configs repo.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"To setup LSP(Language Server Protocol) with julials.lua file in Neovim-from-scratch, we need to setup nvim-lspconfig environment first. Using stow tool, we can copy Makefile to ~/.julia/environments/nvim-lspconfig/.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"$ cd localgit/evoagile_configs   <-- if your local cloned repo is in localgit\n$ stow -t ~ julia\n$ cd ~/.julia/environments/nvim-lspconfig/\n$ make","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"After make command, neovim is launched and open Example.jl source file with some errors. If you wait a moment and no problem occur to install, you can find some bullets as following screenshot.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"(Image: Example.jl with bullets)","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"Then just quit neovim and continue and finish installation. To test installation, open any example Julia file and change keyword function to func tion and at the same line, input gl. If you have some bullets and messages as following, your installation is successful. (Image: Success to install)","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"If you have any error to load Julia LSP, you can find following errror message in neovim. (Image: Fail message)","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"As you can find in the following, LanguageServer package depends on JuliaFormatter, StaticLint, and SymbolServer. That means we do not have to install JuliaFormatter separately.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"using Pkg\nPkg.add(\"LanguageServer\")\n","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"To format your code, you can find related commends in keymaps.lua file. Type :Format in command or <space key>f(when <localleader> = <space key>) in normal mode, whole code in the file will be formatted.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"info: Info\nTo get supported to Julia formatting, we can also try to use JuliaFormatter.vim. This only supports formatting and no other LSP function but range format supporting in visual mode and definition of format option in configuration file are possible. This uses JuliaFormatter independently. However, I found that when we use Julia LSP with this package, LSP was crashed occasionally. So I decided to uninstall it.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"To define format parameters in Julia code is not easy in LSP configuration file. The solution is use '.JuliaFormatter.toml' file in every repo. So it can be convenient to add this file to PkgTemplates. (See below section)","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"info: Info\nThe useful configuration to format isstyle = \"sciml\"\nindent = 2\nmargin = 79For style options, see YAS, Blue, and SciML.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/#Use-[PkgTemplates](https://github.com/JuliaCI/PkgTemplates.jl)-to-generate-repository","page":"Setup Environments","title":"Use PkgTemplates to generate repository","text":"","category":"section"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"PkgTemplates simplifies the process of setting up the initial file structure for a new repository, specifically CI integration with GitHub actions. To use PkgTemplates, we recommend to install it in system default Julia environment, for example, v1.9 as following.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"using Pkg\nPkg.activate()\nPkg.add(\"PkgTemplates\")","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"After installing it, we need to setup the template. It would be convenient to keep it in the startup.jl file for easy reuse. Because this file runs at every starting time for Julia, we can use generate function as following example.","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"julia> genGithubRepo(\"ecoinfo\", \"JuliaStudy.jl\")\n","category":"page"},{"location":"Julia2ndLang/ch0_setup_julia_env/#Use-[GitHub-CLI](https://cli.github.com/)-to-create-repository-in-GitHub","page":"Setup Environments","title":"Use GitHub-CLI to create repository in GitHub","text":"","category":"section"},{"location":"Julia2ndLang/ch0_setup_julia_env/#Playing-with-REPL","page":"Setup Environments","title":"Playing with REPL","text":"","category":"section"},{"location":"Julia2ndLang/ch0_setup_julia_env/#References","page":"Setup Environments","title":"References","text":"","category":"section"},{"location":"Julia2ndLang/ch0_setup_julia_env/","page":"Setup Environments","title":"Setup Environments","text":"Github repo: evoagile_configs\nGithub repo: Neovim-from-scratch/27-Julia-REPL\nSetting up Julia lsp for Neovim\ndiscourse: Neovim + LanguageServer.jl","category":"page"}]
}
